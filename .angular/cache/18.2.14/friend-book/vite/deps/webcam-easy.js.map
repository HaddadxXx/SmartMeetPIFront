{
  "version": 3,
  "sources": ["../../../../../../node_modules/webcam-easy/src/webcam-easy.js"],
  "sourcesContent": ["export default class Webcam {\n  constructor(webcamElement, facingMode = 'user', canvasElement = null, snapSoundElement = null) {\n    this._webcamElement = webcamElement;\n    this._webcamElement.width = this._webcamElement.width || 640;\n    this._webcamElement.height = this._webcamElement.height || 360;\n    this._facingMode = facingMode;\n    this._webcamList = [];\n    this._streamList = [];\n    this._selectedDeviceId = '';\n    this._canvasElement = canvasElement;\n    this._snapSoundElement = snapSoundElement;\n  }\n  get facingMode() {\n    return this._facingMode;\n  }\n  set facingMode(value) {\n    this._facingMode = value;\n  }\n  get webcamList() {\n    return this._webcamList;\n  }\n  get webcamCount() {\n    return this._webcamList.length;\n  }\n  get selectedDeviceId() {\n    return this._selectedDeviceId;\n  }\n\n  /* Get all video input devices info */\n  getVideoInputs(mediaDevices) {\n    this._webcamList = [];\n    mediaDevices.forEach(mediaDevice => {\n      if (mediaDevice.kind === 'videoinput') {\n        this._webcamList.push(mediaDevice);\n      }\n    });\n    if (this._webcamList.length == 1) {\n      this._facingMode = 'user';\n    }\n    return this._webcamList;\n  }\n\n  /* Get media constraints */\n  getMediaConstraints() {\n    var videoConstraints = {};\n    if (this._selectedDeviceId == '') {\n      videoConstraints.facingMode = this._facingMode;\n    } else {\n      videoConstraints.deviceId = {\n        exact: this._selectedDeviceId\n      };\n    }\n    videoConstraints.width = {\n      exact: this._webcamElement.width\n    };\n    videoConstraints.height = {\n      exact: this._webcamElement.height\n    };\n    var constraints = {\n      video: videoConstraints,\n      audio: false\n    };\n    return constraints;\n  }\n\n  /* Select camera based on facingMode */\n  selectCamera() {\n    for (let webcam of this._webcamList) {\n      if (this._facingMode == 'user' && webcam.label.toLowerCase().includes('front') || this._facingMode == 'enviroment' && webcam.label.toLowerCase().includes('back')) {\n        this._selectedDeviceId = webcam.deviceId;\n        break;\n      }\n    }\n  }\n\n  /* Change Facing mode and selected camera */\n  flip() {\n    this._facingMode = this._facingMode == 'user' ? 'enviroment' : 'user';\n    this._webcamElement.style.transform = \"\";\n    this.selectCamera();\n  }\n\n  /*\r\n    1. Get permission from user\r\n    2. Get all video input devices info\r\n    3. Select camera based on facingMode \r\n    4. Start stream\r\n  */\n  async start(startStream = true) {\n    return new Promise((resolve, reject) => {\n      this.stop();\n      navigator.mediaDevices.getUserMedia(this.getMediaConstraints()) //get permisson from user\n      .then(stream => {\n        this._streamList.push(stream);\n        this.info() //get all video input devices info\n        .then(webcams => {\n          this.selectCamera(); //select camera based on facingMode\n          if (startStream) {\n            this.stream().then(facingMode => {\n              resolve(this._facingMode);\n            }).catch(error => {\n              reject(error);\n            });\n          } else {\n            resolve(this._selectedDeviceId);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  /* Get all video input devices info */\n  async info() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices.enumerateDevices().then(devices => {\n        this.getVideoInputs(devices);\n        resolve(this._webcamList);\n      }).catch(error => {\n        reject(error);\n      });\n    });\n  }\n\n  /* Start streaming webcam to video element */\n  async stream() {\n    return new Promise((resolve, reject) => {\n      navigator.mediaDevices.getUserMedia(this.getMediaConstraints()).then(stream => {\n        this._streamList.push(stream);\n        this._webcamElement.srcObject = stream;\n        if (this._facingMode == 'user') {\n          this._webcamElement.style.transform = \"scale(-1,1)\";\n        }\n        this._webcamElement.play();\n        resolve(this._facingMode);\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    });\n  }\n\n  /* Stop streaming webcam */\n  stop() {\n    this._streamList.forEach(stream => {\n      stream.getTracks().forEach(track => {\n        track.stop();\n      });\n    });\n  }\n  snap() {\n    if (this._canvasElement != null) {\n      if (this._snapSoundElement != null) {\n        this._snapSoundElement.play();\n      }\n      this._canvasElement.height = this._webcamElement.scrollHeight;\n      this._canvasElement.width = this._webcamElement.scrollWidth;\n      let context = this._canvasElement.getContext('2d');\n      if (this._facingMode == 'user') {\n        context.translate(this._canvasElement.width, 0);\n        context.scale(-1, 1);\n      }\n      context.clearRect(0, 0, this._canvasElement.width, this._canvasElement.height);\n      context.drawImage(this._webcamElement, 0, 0, this._canvasElement.width, this._canvasElement.height);\n      let data = this._canvasElement.toDataURL('image/png');\n      return data;\n    } else {\n      throw \"canvas element is missing\";\n    }\n  }\n}"],
  "mappings": "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",
  "names": []
}
